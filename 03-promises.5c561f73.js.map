{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,IACLH,EACKI,QAAQC,QACb,qBAAqBP,QAAeC,OACpCO,MAAKC,GAASf,EAAAgB,OAAOC,QAAQF,KAGxBH,QAAQM,OAAO,oBAAoBZ,QAAeC,OAAWY,OAClEC,GAASpB,EAAAgB,OAAOK,QAAQD,MAI3Bb,E,CAGLL,EAAOoB,iBAAiB,UAAUC,IAChCA,EAAEC,iBAEF,IAAIC,EAAYC,OAAOxB,EAAOyB,SAASpB,MAAMQ,OAE7C,IAAK,IAAIa,EAAI,EAAGA,GAAK1B,EAAOyB,SAASE,OAAOd,MAAOa,GAAK,EACtDvB,EAAcuB,EAAGH,GACjBA,GAAaC,OAAOxB,EAAOyB,SAASG,KAAKf,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      return Promise.resolve(\n        `Fulfilled Promise ${position} in ${delay}ms`\n      ).then(value => Notify.success(value));\n      // Fulfill\n    } else {\n      return Promise.reject(`Rejected Promise ${position} in ${delay}ms`).catch(\n        error => Notify.failure(error)\n      );\n      // Reject\n    }\n  }, delay);\n}\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let callDelay = Number(formEl.elements.delay.value);\n\n  for (let i = 1; i <= formEl.elements.amount.value; i += 1) {\n    createPromise(i, callDelay);\n    callDelay += Number(formEl.elements.step.value);\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Promise","resolve","then","value","Notify","success","reject","catch","error","failure","addEventListener","e","preventDefault","callDelay","Number","elements","i","amount","step"],"version":3,"file":"03-promises.5c561f73.js.map"}