{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAiBtCF,EAAOG,iBAAiB,UAAUC,IAChCA,EAAEC,iBAEF,IAAIC,EAAYC,OAAOP,EAAOQ,SAASC,MAAMC,OAE7C,IAAK,IAAIC,EAAI,EAAGA,GAAKX,EAAOQ,SAASI,OAAOF,MAAOC,GAAK,EACtDE,YAAW,KAAMC,OArBEC,EAqBYJ,EArBFF,EAqBKH,EApBdU,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,qBAAqBJ,QAAeN,OAAWW,MACpEV,GAASZ,EAAAuB,OAAOC,QAAQZ,KAInBQ,QAAQK,OAAO,oBAAoBR,QAAeN,OAAWe,OAClEC,GAAS3B,EAAAuB,OAAOK,QAAQD,KAT9B,IAAuBV,EAAUN,CAqBe,GAAEH,GAC9CqB,QAAQC,IAAItB,GACZA,GAAaC,OAAOP,EAAOQ,SAASqB,KAAKnB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve(`Fulfilled Promose ${position} in ${delay}ms`).then(\n      value => Notify.success(value)\n    );\n    // Fulfill\n  } else {\n    return Promise.reject(`Rejected Promose ${position} in ${delay}ms`).catch(\n      error => Notify.failure(error)\n    );\n    // Reject\n  }\n}\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let callDelay = Number(formEl.elements.delay.value);\n\n  for (let i = 1; i <= formEl.elements.amount.value; i += 1) {\n    setTimeout(() => createPromise(i, callDelay), callDelay);\n    console.log(callDelay);\n    callDelay += Number(formEl.elements.step.value);\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","e","preventDefault","callDelay","Number","elements","delay","value","i","amount","setTimeout","$47d4ff9957288465$var$createPromise","position","Math","random","Promise","resolve","then","Notify","success","reject","catch","error","failure","console","log","step"],"version":3,"file":"03-promises.f7d91b6a.js.map"}